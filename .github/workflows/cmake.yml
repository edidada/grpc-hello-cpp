name: CMake

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
    # Some projects don't allow in-source building, so create a separate build directory
    # We'll use this as our working directory for all subsequent commands
    run:|
      sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
      sudo apt-get update -y
      sudo apt-get install g++-7 -y
      sudo apt install -y gcc-7 gcc-7-multilib g++-7 g++-7-multilib
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100
      which gcc
      gcc --version
      which g++
      g++ --version
      sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 100
      sudo update-alternatives --config gcc
      sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 100
      sudo update-alternatives --config g++
      which gcc
      gcc --version
      which g++
      g++ --version
      cd ..
      git clone https://github.com/Microsoft/vcpkg.git
      cd vcpkg
      ./bootstrap-vcpkg.sh
      ./vcpkg integrate install
      sudo ln -s /home/travis/build/edidada/vcpkg/vcpkg /usr/bin
      vcpkg search sqlite
      vcpkg install grpc
      vcpkg list

    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{github.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{github.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source 
      # and build directories, but this is only available with CMake 3.13 and higher.  
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE
